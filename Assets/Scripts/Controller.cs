//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Controller.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controller : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controller()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controller"",
    ""maps"": [
        {
            ""name"": ""ActionMap"",
            ""id"": ""43b754ef-f3b6-4948-b358-9b6adae6f2a1"",
            ""actions"": [
                {
                    ""name"": ""MoveWASD"",
                    ""type"": ""Value"",
                    ""id"": ""ca6720ce-46bd-4d2c-91d9-18ff2bfdfa19"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""4cee074d-b6f9-4c79-a1b7-2edd328fed25"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveArrow"",
                    ""type"": ""Value"",
                    ""id"": ""eeae2668-6928-48ac-a74b-5d9463b1e85e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""ecc3977b-43c5-4e00-9f70-baf680309875"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""2a51c17e-831e-4415-a6c3-018428cd6ad3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveWASD"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""39b8a3ef-7cc9-4ba4-acb2-6ff34d27ca8f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveWASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4527d024-c0d2-46c2-a77b-3a4927dfde4c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveWASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""774cb9de-ef8a-48dd-8443-80d010efd4de"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveWASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""134dcd12-8f20-46c8-bf61-d6bb2eb77315"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveWASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""94efde38-cac0-4b73-93da-86850b35239c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Arrow"",
                    ""id"": ""15f19610-c61d-4021-9b72-94166c8760c4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveArrow"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""737da897-0b5b-4de6-88db-9902a2a23992"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f36eeacc-0cd0-4722-86a3-7b7d2ca422eb"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""61698eb0-d3c9-4477-8db0-8909b52b8a3e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b5813131-2192-4ba4-a100-4e51ed886b99"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""de3001d6-8359-4154-84bd-921c55bd376f"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // ActionMap
        m_ActionMap = asset.FindActionMap("ActionMap", throwIfNotFound: true);
        m_ActionMap_MoveWASD = m_ActionMap.FindAction("MoveWASD", throwIfNotFound: true);
        m_ActionMap_Start = m_ActionMap.FindAction("Start", throwIfNotFound: true);
        m_ActionMap_MoveArrow = m_ActionMap.FindAction("MoveArrow", throwIfNotFound: true);
        m_ActionMap_Menu = m_ActionMap.FindAction("Menu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ActionMap
    private readonly InputActionMap m_ActionMap;
    private IActionMapActions m_ActionMapActionsCallbackInterface;
    private readonly InputAction m_ActionMap_MoveWASD;
    private readonly InputAction m_ActionMap_Start;
    private readonly InputAction m_ActionMap_MoveArrow;
    private readonly InputAction m_ActionMap_Menu;
    public struct ActionMapActions
    {
        private @Controller m_Wrapper;
        public ActionMapActions(@Controller wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveWASD => m_Wrapper.m_ActionMap_MoveWASD;
        public InputAction @Start => m_Wrapper.m_ActionMap_Start;
        public InputAction @MoveArrow => m_Wrapper.m_ActionMap_MoveArrow;
        public InputAction @Menu => m_Wrapper.m_ActionMap_Menu;
        public InputActionMap Get() { return m_Wrapper.m_ActionMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ActionMapActions set) { return set.Get(); }
        public void SetCallbacks(IActionMapActions instance)
        {
            if (m_Wrapper.m_ActionMapActionsCallbackInterface != null)
            {
                @MoveWASD.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnMoveWASD;
                @MoveWASD.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnMoveWASD;
                @MoveWASD.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnMoveWASD;
                @Start.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnStart;
                @Start.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnStart;
                @Start.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnStart;
                @MoveArrow.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnMoveArrow;
                @MoveArrow.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnMoveArrow;
                @MoveArrow.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnMoveArrow;
                @Menu.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnMenu;
                @Menu.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnMenu;
                @Menu.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnMenu;
            }
            m_Wrapper.m_ActionMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveWASD.started += instance.OnMoveWASD;
                @MoveWASD.performed += instance.OnMoveWASD;
                @MoveWASD.canceled += instance.OnMoveWASD;
                @Start.started += instance.OnStart;
                @Start.performed += instance.OnStart;
                @Start.canceled += instance.OnStart;
                @MoveArrow.started += instance.OnMoveArrow;
                @MoveArrow.performed += instance.OnMoveArrow;
                @MoveArrow.canceled += instance.OnMoveArrow;
                @Menu.started += instance.OnMenu;
                @Menu.performed += instance.OnMenu;
                @Menu.canceled += instance.OnMenu;
            }
        }
    }
    public ActionMapActions @ActionMap => new ActionMapActions(this);
    public interface IActionMapActions
    {
        void OnMoveWASD(InputAction.CallbackContext context);
        void OnStart(InputAction.CallbackContext context);
        void OnMoveArrow(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
    }
}
